<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>마이그레이션 가이드 on</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/migration-guide/</link><description>Recent content in 마이그레이션 가이드 on</description><generator>Hugo</generator><language>v1-1-0-kor</language><atom:link href="https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/migration-guide/index.xml" rel="self" type="application/rss+xml"/><item><title>1.0.x</title><link>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/migration-guide/migration-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://naver.github.io/fixture-monkey/v1-1-0-kor/docs/migration-guide/migration-guide/</guid><description>&lt;h2 id="코틀린-타입-생성-방법">코틀린 타입 생성 방법 &lt;a href="#%ec%bd%94%ed%8b%80%eb%a6%b0-%ed%83%80%ec%9e%85-%ec%83%9d%ec%84%b1-%eb%b0%a9%eb%b2%95" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>1.0.x에서 &lt;code>KotlinPlugin&lt;/code>을 추가하면 자바 타입과 코틀린 타입 모두 &lt;code>PrimaryConstructorArbitraryIntrospector&lt;/code> 를 사용해서 생성합니다. 코틀린의 primary 생성자를 사용해서 객체를 생성하기 때문에 자바 타입이 들어오면 문제가 발생합니다.&lt;/p>
&lt;p>1.1.x부터 &lt;code>KotlinPlugin&lt;/code>을 추가하면 자바 타입은 &lt;code>BeanArbitraryIntrospector&lt;/code>으로 생성하고 코틀린 타입은 &lt;code>PrimaryConstructorArbitraryIntrospector&lt;/code>으로 생성합니다.&lt;/p>
&lt;h2 id="자바와-코틀린의-arbitrarybuilder-api-다른-점">자바와 코틀린의 ArbitraryBuilder API 다른 점 &lt;a href="#%ec%9e%90%eb%b0%94%ec%99%80-%ec%bd%94%ed%8b%80%eb%a6%b0%ec%9d%98-arbitrarybuilder-api-%eb%8b%a4%eb%a5%b8-%ec%a0%90" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>1.0.x에서는 자바와 코틀린 모두 동일한 ArbitraryBuilder 인터페이스에서 노출하는 API를 사용합니다.&lt;/p>
&lt;p>1.1.x부터 픽스쳐 몽키는 자바 특화 ArbitrayBuilder API와 코틀린 특화 ArbitraryBuilder API를 제공합니다. 물론 자바 특화 ArbitraryBuilder API를 사용해도 코틀린 타입을 생성할 수 있습니다. 반대의 경우도 가능합니다.&lt;/p></description></item></channel></rss>